/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

//import domain.Provider;
//import dao.IProviderDAO;
//import dao.ProviderMapDAO;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.bean.Provider;
import model.dao.ProviderDAO;

/**
 *
 * @author visitante
 */
public class TelaFornecedor extends javax.swing.JFrame {

       private DefaultTableModel modelo = new DefaultTableModel();
       //private IProviderDAO providerDAO = new ProviderMapDAO();
       
 
    public TelaFornecedor() {
        initComponents();
        initCustomComponents();
        readTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtCompany = new javax.swing.JTextField();
        txtCollaborator = new javax.swing.JTextField();
        txtDate = new javax.swing.JTextField();
        txtHour = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnChange = new javax.swing.JButton();
        btnSeach1 = new javax.swing.JButton();
        txtCpf = new javax.swing.JTextField();
        txtResident = new javax.swing.JTextField();
        btnClean = new javax.swing.JButton();
        txtCampoBuscar = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        txtObs = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableProvider = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        menuItemSair = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Empresa");

        jLabel2.setText("Colaborador");

        jLabel3.setText("CPF");

        jLabel4.setText("Morador");

        jLabel5.setText("Data");

        jLabel6.setText("Hora");

        btnSave.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnSave.setText("Salvar");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnDelete.setText("Excluir");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnChange.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnChange.setText("Atualizar");
        btnChange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChangeActionPerformed(evt);
            }
        });

        btnSeach1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnSeach1.setText("Pesquisar");

        btnClean.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnClean.setText("Limpar campos");
        btnClean.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCleanActionPerformed(evt);
            }
        });

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        jLabel8.setText("Obsevarção");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtCompany, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1))
                                .addGap(36, 36, 36)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtCollaborator, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))
                                .addGap(40, 40, 40)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtCpf, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3))
                                .addGap(26, 26, 26)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(txtResident, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(59, 59, 59)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(54, 54, 54)
                                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(51, 51, 51)
                                        .addComponent(btnChange, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(27, 27, 27)
                                        .addComponent(jLabel8)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtObs, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(btnSeach1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(61, 61, 61)
                                .addComponent(btnClean))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5))
                                .addGap(34, 34, 34)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtHour, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtCampoBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnBuscar)
                        .addGap(87, 87, 87)))
                .addGap(0, 61, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCompany, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCollaborator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtResident, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave)
                    .addComponent(btnDelete)
                    .addComponent(btnChange)
                    .addComponent(btnSeach1)
                    .addComponent(btnClean))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCampoBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnBuscar))
                        .addGap(32, 32, 32))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtObs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel7.setText("REGISTRO DE FORNECEDORES");

        tableProvider.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableProvider.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableProviderMouseClicked(evt);
            }
        });
        tableProvider.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tableProviderKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tableProvider);

        jMenu1.setText("Opções");

        menuItemSair.setText("Sair");
        menuItemSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemSairActionPerformed(evt);
            }
        });
        jMenu1.add(menuItemSair);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1108, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 418, Short.MAX_VALUE)
                        .addComponent(jLabel7)
                        .addGap(0, 418, Short.MAX_VALUE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        /*
        String nameCompany = txtCompany.getText();
        String nameCollaborator = txtCollaborator.getText();
        String cpfCollaborator = txtCpf.getText();
        String nameResident = txtResident.getText();
        String date = txtDate.getText();
        String qtd = txtQtd.getText();
        String hour = txtHour.getText();
        */
        
        
       Provider p = new Provider();
       ProviderDAO dao = new ProviderDAO();
       p.setEmpresa(txtCompany.getText());
       p.setColaborador(txtCollaborator.getText());
       p.setCpf(Integer.parseInt(txtCpf.getText()));
       p.setMorador(txtResident.getText());
     //  p.setDataFormatada(txtDate.getText());
     //p.setData(txtDate.getText());
     //  p.setQtd(Integer.parseInt(txtQtd.getText()));
       p.setObs(txtObs.getText());
       
       
       
       dao.create(p);
       readTable();
        /*
        if(!isCampoValidos( nameCompany, nameCollaborator, cpfCollaborator, nameResident,date, hour)) {
            JOptionPane.showInternalMessageDialog(null,"Existem campos a serem preenchidos","ATENÇÃO",
                JOptionPane.INFORMATION_MESSAGE);
           return; 
        }
        
         Provider provider = new Provider(nameCompany ,nameCollaborator , cpfCollaborator, nameResident , date, hour);
         Boolean isCadastrado = this.providerDAO.cadastrar(provider);
        

        if (isCadastrado) {
             modelo.addRow(new Object[]{provider.getNameCompany(), provider.getNameCollaborator(), provider.getCpf(), provider.getNameResident(), provider.getDate(), provider.getHour()});
            LimpaCampos();
                
           
        }else{
            JOptionPane.showMessageDialog(null, "Cliente já se encontra no cadastrado",
                "ATENÇÃO",JOptionPane.INFORMATION_MESSAGE);
            
        }
        */
    }//GEN-LAST:event_btnSaveActionPerformed

    private void menuItemSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemSairActionPerformed
       
        int result = JOptionPane.showConfirmDialog(this,"Deseja sair da aplicação","Sair",JOptionPane.YES_NO_OPTION,
            JOptionPane.QUESTION_MESSAGE);
        if(result == JOptionPane.YES_OPTION){
            System.exit(0);
        }
    }//GEN-LAST:event_menuItemSairActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
    
         if(tableProvider.getSelectedRow() != -1) {
            
            Provider p = new Provider();
            ProviderDAO dao = new ProviderDAO();
            
            int result = JOptionPane.showConfirmDialog(this,"Deseja realmente excluir?","ATENÇÃO",JOptionPane.YES_NO_OPTION,
            JOptionPane.QUESTION_MESSAGE);
            
            if(result == JOptionPane.YES_OPTION){
                 p.setId((int)tableProvider.getValueAt(tableProvider.getSelectedRow(),0));
            
                dao.delete(p);
                limpaCampos();
                readTable();
                
            }else{
                
                limpaCampos();
                readTable();
                
                return;
                
            }
                
            
            } 
            
         
         JOptionPane.showMessageDialog(null,"Selecione a linha com os dados do fornecedor para excluir!");
         
        
        
        
        /*
        int rowSelect = tableProvider.getSelectedRow();
        
        
        if(rowSelect >= 0) {
            int result = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir este fornecedor do registro? ",
                    "CUIDADO",JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            
            
            if(result == JOptionPane.YES_OPTION){
                Long cpf = (Long) tableProvider.getValueAt(rowSelect, 2);
                this.providerDAO.excluir(cpf);
                modelo.removeRow(rowSelect);
                
                JOptionPane.showMessageDialog(null, "Fornecedor excluido com sucesso!", "Sucesso",JOptionPane.INFORMATION_MESSAGE);
            }else {
                JOptionPane.showMessageDialog(null, "Nenhum cliente selecionado.", "ERRO",JOptionPane.INFORMATION_MESSAGE);
            }
        }
        
        */
        
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChangeActionPerformed
        
         if(tableProvider.getSelectedRow() != -1) {
            
            Provider p = new Provider();
            ProviderDAO dao = new ProviderDAO();
            p.setEmpresa(txtCompany.getText());
            p.setColaborador(txtCollaborator.getText());
            p.setCpf(Integer.parseInt(txtCpf.getText()));
            p.setMorador(txtResident.getText());
     //  p.setDataFormatada(txtDate.getText());
     //p.setData(txtDate.getText());
     //  p.setQtd(Integer.parseInt(txtQtd.getText()));
             p.setHora(txtHour.getText());
             p.setId((int)tableProvider.getValueAt(tableProvider.getSelectedRow(),0));
       
            dao.upDate(p);
            limpaCampos();
            readTable();
        }
        
        
        
        
        
        
        
        
        
        
        /*
        
        int rowSelect = tableProvider.getSelectedRow();
         
         if(rowSelect >= 0) {
             Long cpf = (Long) tableProvider.getValueAt(rowSelect, 2);
             String nameCompany = txtCompany.getText();
             String nameCollaborator = txtCollaborator.getText();
             String nameResident = txtResident.getText();
             String date = txtDate.getText();
             String hour = txtHour.getText();
             
             if(!isCampoValidos(nameCompany,nameCollaborator, cpf.toString(),nameResident, date, hour )) {
                  JOptionPane.showMessageDialog(null, "Falta preencher campos obrigatórios!", "ATENÇÃO",JOptionPane.INFORMATION_MESSAGE);
                  return;
             }
             
             
             
             Provider provider = new Provider(nameCompany ,nameCollaborator ,cpf.toString(), nameResident , date, hour);
             
             
             
             this.providerDAO.alterar(provider);
             
             
             
             modelo.removeRow(rowSelect);
             modelo.addRow(new Object[]{provider.getNameCompany(), provider.getNameCollaborator(), provider.getCpf(), provider.getNameResident(), provider.getDate(), provider.getHour()});
             
             JOptionPane.showMessageDialog(null, "Dados do fornecedor atualizados com sucesso!", "Sucesso",
                     JOptionPane.INFORMATION_MESSAGE);
             LimpaCampos();
             
         }else {
             JOptionPane.showMessageDialog(null, "Nenhum cliente selecionado!", "ERRO",
                     JOptionPane.INFORMATION_MESSAGE);
         }
         
       */
    }//GEN-LAST:event_btnChangeActionPerformed

    private void tableProviderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableProviderMouseClicked
       /*
        int rowSelect = tableProvider.getSelectedRow();
        Long cpf = (Long) tableProvider.getValueAt(rowSelect,2);
        
        Provider provider = this.providerDAO.consultar(cpf);
        if (provider != null) {
            txtCompany.setText(provider.getNameCompany());
            txtCollaborator.setText(provider.getNameCollaborator());
            txtCpf.setText(provider.getCpf().toString());
            txtResident.setText(provider.getNameResident());
            txtDate.setText(provider.getDate());
            txtHour.setText(provider.getHour());
        }
        
        */
       
         if(tableProvider.getSelectedRow() != -1) {
            
            txtCompany.setText(tableProvider.getValueAt(tableProvider.getSelectedRow(),1).toString());
            txtCollaborator.setText(tableProvider.getValueAt(tableProvider.getSelectedRow(),2).toString());
            txtCpf.setText(tableProvider.getValueAt(tableProvider.getSelectedRow(),3).toString());
            txtResident.setText(tableProvider.getValueAt(tableProvider.getSelectedRow(), 4).toString());
            //txtDate.setText("");
            txtHour.setText(tableProvider.getValueAt(tableProvider.getSelectedRow(),5).toString());
        }
    }//GEN-LAST:event_tableProviderMouseClicked

    private void btnCleanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCleanActionPerformed
       
        limpaCampos();
        
    }//GEN-LAST:event_btnCleanActionPerformed

    private void tableProviderKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tableProviderKeyReleased
        /*
        if(tableProvider.getSelectedRow() != -1) {
            
            txtCompany.setText(tableProvider.getValueAt(tableProvider.getSelectedRow(),1).toString());
            txtCollaborator.setText(tableProvider.getValueAt(tableProvider.getSelectedRow(),2).toString());
            txtCpf.setText(tableProvider.getValueAt(tableProvider.getSelectedRow(),3).toString());
            txtResident.setText(tableProvider.getValueAt(tableProvider.getSelectedRow(), 4).toString());
            //txtDate.setText("");
            txtHour.setText(tableProvider.getValueAt(tableProvider.getSelectedRow(),5).toString());
        }
        
        */
    }//GEN-LAST:event_tableProviderKeyReleased

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
       
        readTableForDesc(txtCampoBuscar.getText());
       
        
    }//GEN-LAST:event_btnBuscarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaFornecedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaFornecedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaFornecedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaFornecedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaFornecedor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnChange;
    private javax.swing.JButton btnClean;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSeach1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuItem menuItemSair;
    private javax.swing.JTable tableProvider;
    private javax.swing.JTextField txtCampoBuscar;
    private javax.swing.JTextField txtCollaborator;
    private javax.swing.JTextField txtCompany;
    private javax.swing.JTextField txtCpf;
    private javax.swing.JTextField txtDate;
    private javax.swing.JTextField txtHour;
    private javax.swing.JTextField txtObs;
    private javax.swing.JTextField txtResident;
    // End of variables declaration//GEN-END:variables

    private boolean isCampoValidos(String ...campos) {
           for (String campo : campos) {
            if (campos == null || "".equals(campo)) {
                return false;
            }
        }
        return true;
    }
    
     private void initCustomComponents() {
         
        
         modelo.addColumn("ID");
         modelo.addColumn("Empresa");
         modelo.addColumn("Colaborador");
         modelo.addColumn("CPF");
         modelo.addColumn("Morador");
        // modelo.addColumn("Data");
        // modelo.addColumn("Qtd");
         modelo.addColumn("OBS");
         
         tableProvider.setModel(modelo);
    }
     
     
     
     
     
    private void limpaCampos() {
        txtCompany.setText("");
        txtCollaborator.setText("");
        txtCpf.setText("");
        txtResident.setText("");
        txtDate.setText("");
        txtHour.setText("");
       
    }
   
    /*
    private void excluir(String dados) {
        providerDAO.excluir(Long.parseLong(dados));
        
         JOptionPane.showMessageDialog(null,"Cliente excluido com sucesso!",
                    "Excluindo Cliente", JOptionPane.INFORMATION_MESSAGE);
         
        
    }

   */

    private void readTable() {
        modelo.setNumRows(0);
         ProviderDAO clienteDAO = new ProviderDAO();
         
         for(Provider c: clienteDAO.read()){
             
             modelo.addRow(new Object[]{
                 c.getId(),
                 c.getEmpresa(),
                 c.getColaborador(),
                 c.getCpf(),
                 c.getMorador(),
                 c.getObs()
             });
             

         }
        
    }

    private void readTableForDesc(String desc) {
        modelo.setNumRows(0);
         ProviderDAO clienteDAO = new ProviderDAO();
         
         for(Provider c: clienteDAO.readForDesc(desc)){
             
             modelo.addRow(new Object[]{
                 c.getId(),
                 c.getEmpresa(),
                 c.getColaborador(),
                 c.getCpf(),
                 c.getMorador(),
                 c.getObs()
             });
             

         }
        
    }

}
